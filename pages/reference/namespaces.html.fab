âœ³
(ns site.fabricate.docs.reference.namespaces
  (:require [site.fabricate.api]
            [site.fabricate.prototype.read]
            [site.fabricate.prototype.hiccup]))
ðŸ”š
âœ³
(def metadata
  {:title "Namespaces" :page-style (slurp "docs/css/fabricate.css")})
ðŸ”š
âœ³=

[:div {:class "split"}
 
 [:h1 {:style {:grid-column "1 / -1"
               :background "var(--color-brown)"
               :color "var(--color-sand)"
               :padding-left "var(--grid-gap-x)"
               :padding-right "var(--grid-gap-x)"
               :padding-bottom "0.25em"
               :margin-bottom "0em"}}
  (:title metadata)]
 [:p {:style {:background "var(--color-sand)"
              :display "block"
              :grid-column "1 / -1"
              :padding-left "0.15em"
              :padding-top "0.15em"
              :border-color "var(--color-brown)"
              :border-left-style "solid"
              :border-left-width "var(--grid-gap-x)"
              :border-right-style "solid"
              :border-right-width "var(--grid-gap-x)"
              :margin-bottom "0em"
              :padding-bottom "0.75em"
              }} "Organization of Fabricate's namespaces."]
 [:dl {:style {:margin-top "0em"}}
  [:div {:style {:grid-column "1 / -1"
                 :display "grid" :grid-template-columns "subgrid"
                 :background "var(--color-brown)"
                 :outline-color "var(--color-brown)"
                 :border-color "var(--color-brown)"
                 }}
   [:dt {:style {:background "var(--color-sand)"
                 :color "var(--color-brown)"
                 }} "site.fabricate"] [:dd {:style {:background "var(--color-brown)"}}]
   
   [:dt {:style {:color "var(--color-sand)"
                 :background "var(--color-brown)"}}
    [:a {:class "decor-internal"
         :href "/reference/namespaces/site.fabricate.api.html"} "api"]] [:dd {:style {:background "var(--color-sand)"}} "core API for Fabricate."]]
  [:div {:style {:background "var(--color-gray)"
                 :border-bottom-color "var(--color-gray)"
                 :outline-color "var(--color-gray)"}}
   [:dt {:style {:color "var(--color-sand)"}} 
    [:a {:class "decor-internal"
         :href "/reference/namespaces/site.fabricate.source.html"} "source"]]
   [:dd "Registers default collect multimethods for source files. Require it to enable shorthand for entry keys like " 
    [:code {:class "language-clojure keyword"} "::source/location."]]]
  [:div {:style {:background "var(--color-blue)"
                 :outline-color "var(--color-blue)"
                 :border-color "var(--color-blue)"
                 :outline-width "var(--grid-gap-x)"}}
   [:dt {:style {:color "var(--color-sand)"}}
    [:a {:class "decor-internal"
          :href "/reference/namespaces/site.fabricate.document.html"}  "document"]] 
   [:dd "Registers default " [:code {:class "language-clojure symbol"} "api/assemble"] " multimethods for documents."]
   [:dt {:style {:background "var(--color-sand)"
                 :color "var(--color-blue)"
                 :padding-left "0.75em"}}
    [:a {:class "decor-internal"
         :href "/reference/namespaces/site.fabricate.document.fabricate.html "} "fabricate"]]
   [:dd  "Fabricate templates mix plaintext, Hiccup, and Clojure code."]
   [:dt
    {:style {:background "var(--color-sand)"
             :padding-left "0.75em"
             :color "var(--color-blue)"}}
    [:a {:class "decor-internal"
         :href "/reference/namespaces/site.fabricate.clojure.html"} "clojure"]] [:dd  "Generate Hiccup from comments and the results of expressions in a Clojure file."]
   [:dt {:style {:background "var(--color-sand)"
                 :padding-left "0.75em"
             :color "var(--color-blue)"}}
     [:a {:class "decor-internal"
          :href "/reference/namespaces/site.fabricate.document.markdown.html"}  "markdown"]] [:dd "Convert Markdown to Hiccup."]
]
  [:div
   {:style {:background "var(--color-green)"
            :outline-color "var(--color-green)"
            :border-color "var(--color-green)"
            }}
   [:dt {:style {:color "var(--color-sand)"}}
    [:a {:class "decor-internal"
         :href "/reference/namespaces/site.fabricate.page.html"} "page"]]
   [:dd {:style {:background "var(--color-sand)"}} "Registers default " [:code {:class "language-clojure symbol"} "api/produce!"] " multimethods for documents."]
   [:dt {:style {:background "var(--color-sand)"
                 :padding-left "0.75em"
                 :color "var(--color-green)"}}
    [:a {:class "decor-internal"
         :href "/reference/namespaces/site.fabricate.page.html"} "html"]] 
   [:dd  "Converts Hiccup to HTML."]]
  [:div {:style {:background "var(--color-yellow)"
                 :outline-color "var(--color-yellow)"}}
   [:dt  "prototype"]
   [:dd "Prototype namespaces contain not-yet-stabilized features."]
   [:dt {:style {:color "var(--color-yellow)"
                 :padding-left "0.75em"}}

    [:a {:class "decor-internal"
         :href "/reference/namespaces/site.fabricate.prototype.read.html"} "read"]] [:dd "Functions to parse and evaluate Fabricate's template files."]
   [:dt {:style {:color "var(--color-yellow)"
                 :padding-left "1.5em"}} 
    [:a {:class "decor-internal"
         :href "/reference/namespaces/site.fabricate.prototype.read.grammar.html"} "grammar"]] [:dd "Specifies the EBNF grammar that defines Fabricate's templates."]
   [:dt {:style {:color "var(--color-yellow)"
                 :padding-left "0.75em"}}
    [:a {:class "decor-internal"
         :href "/reference/namespaces/site.fabricate.prototype.schema.html"} "schema"]] [:dd "Utility namespace for working with Malli schemas."]
   [:dt {:style {:color "var(--color-yellow)"
                 :padding-left "0.75em"}}
    [:a {:class "decor-internal"
         :href "/reference/namespaces/site.fabricate.prototype.html.html"} "html"]] [:dd "Defines a Malli schema for HTML in Hiccup form and functions for processing Hiccup elements."]
   [:dt {:style {:color "var(--color-yellow)"
                 :padding-left "0.75em"}}
    [:a {:class "decor-internal"
         :href "/reference/namespaces/site.fabricate.prototype.hiccup.html"} "hiccup"]] [:dd]]
  ]]

ðŸ”š
