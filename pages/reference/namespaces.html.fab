
âœ³
(ns site.fabricate.docs.reference.namespaces
  (:require [site.fabricate.api]
            [site.fabricate.prototype.read]
            [site.fabricate.prototype.hiccup]))
ðŸ”š


âœ³
(def metadata
  {:title "Namespace layout" :page-style (slurp "docs/css/fabricate.css")})
ðŸ”š

âœ³=
[:h1 (:title metadata)]
ðŸ”š

Core organization for Fabricate's namespaces.

âœ³=

[:ul {:class "main-track mono-txt"} [:li "site.fabricate"]
 [:ul [:li [:a {:href "/reference/namespaces/site.fabricate.api.html"} "api"] [:br] [:span {:class "prop-txt"} "Fabricate core API"]]
  [:li "source" [:br]
   [:span {:class "prop-txt"}
    "The source namespace registers all of fabricate's default collect methods for source files. Requiring this namespace also allows for shorthanding entry properties: "
    [:code {:class "language-clojure keyword"} "::source/location"] "."]]
  [:li "document" [:br]
   [:span {:class "prop-txt"}
    "Document namespace registers Fabricate's default assemble methods for documents."]
   [:ul [:li "fabricate"] [:li "clojure"] [:li "markdown"]]]
  [:li "page" [:br]
   [:span {:class "prop-txt"} "Page namespace registers Fabricate's default "
    [:code {:class "language-clojure symbol"} "produce!"] " methods for pages."]
   [:ul [:li "html"]]]
  [:li "prototype" [:br]
   [:span {:class "prop-txt"}
    "Prototype namespaces contain not-yet-stabilized features."]
   [:ul [:li "read" [:ul [:li "grammar"]]] [:li "schema"] [:li "html"
                                                           [:ul [:li "paragraphs"]]]
    [:li "hiccup" [:br] [:aside {:class "prop-txt"} [:em "should the HTML and hiccup namespaces be merged?"]]]]]]]

ðŸ”š


This could be made a bit nicer by adapting two points of inspiration:
âœ³=
[:ul {:style "grid-column: 2 / 6;"} [:li [:a {:href "https://iamkate.com/code/tree-views/"} "Kate Morley's 'Tree views in CSS'"] " (omitting the details elements)"]
[:li [:a {:href "https://owickstrom.github.io/the-monospace-web/"} "Oskar WickstrÃ¶m's 'The Monospace Web'"]]]
ðŸ”š